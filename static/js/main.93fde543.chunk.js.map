{"version":3,"sources":["components/Header.js","components/Footer.js","components/ReusableForm.js","components/NewItemForm.js","components/Item.js","components/ItemList.js","components/ItemDetail.js","components/EditItemForm.js","components/ItemControl.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/form-visible-reducer.js","reducers/item-list-reducer.js","reducers/editing-visible-reducer.js","reducers/selected-item-reducer.js","index.js"],"names":["Header","Fragment","style","position","top","left","height","backgroundColor","width","color","className","href","Footer","display","justifyContent","padding","bottom","ReusableForm","props","margin","marginBottom","onSubmit","formSubmissionHandler","src","alt","type","name","placeholder","required","buttonText","NewItemForm","event","preventDefault","onNewItemCreation","target","value","description","quantity","id","v4","Item","border","textAlign","marginTop","onClick","whenBuyClicked","whenRestockClicked","whenItemClicked","ItemList","Object","values","itemList","map","item","onItemSelection","onClickingBuy","onClickingRestock","key","ItemDetail","onClickingDelete","onClickingEdit","EditItemForm","console","log","onEditItem","ItemControl","currentlyVisibleState","editing","selectedItem","itemToEdit","dispatch","formVisibleOnPage","newItem","masterItemList","currentlySelectedItem","filter","parseInt","overflowY","connect","state","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","assign","newState","nullState","store","createStore","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.93fde543.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n\n  const headerStyles = {\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    height: '30vh',\n    backgroundColor: '#7FBC76',\n    width: '100%',\n    color: '#f5f5f5'\n  }\n\n  return (\n    <React.Fragment>\n      <div style={headerStyles}>\n        <div className=\"navigation\">\n          <a href=\"#\">Home</a>\n          <a href=\"#\">About Us</a>\n          <a href=\"#\">Partners</a>\n          <a href=\"#\">Products</a>\n        </div>\n        <div className=\"brand-section\">\n          <h1>Earth<span className=\"merch\">Merch</span></h1>\n          <div className=\"mission-statement\">\n            <p>We drive transformative change for people and planet.</p>\n            <p>We support local artists and small makers who use natural, high-quality materials.</p>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer(){\n\n  const footerStyles = {\n    backgroundColor: '#1A285A',\n    width: '100%',\n    color: '#f5f5f5',\n    display: 'flex',\n    justifyContent: 'space-around',\n    padding: '2%',\n    position: 'fixed',\n    bottom: '0',\n    left: '0'\n  }\n\n  return(\n    <React.Fragment>\n    <div style={footerStyles}>\n      <h3>Earth<span className=\"merchFooter\">Merch</span></h3>\n      <h4>&copy; Michelle Morin, Jamison Cozart</h4>\n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ReusableForm(props) {\n\n  const formStyles = {\n    width: '40vw',\n    margin: 'auto auto',\n    backgroundColor: 'transparent',\n    padding: '5%',\n    marginBottom: '2%'\n  }\n\n  return (\n    <React.Fragment>\n      <div style={formStyles}>\n        <form onSubmit={props.formSubmissionHandler}>\n          <img src=\"https://img.icons8.com/metro/26/000000/pencil.png\" alt='pencil icon' />\n            <input\n              type='text'\n              name='name'\n              placeholder='item name' required />\n            <input\n              type='text'\n              name='description'\n              placeholder='item description' required />\n            <input\n              type='number'\n              name='quantity'\n              placeholder='initial quantity' required />\n            <button className=\"formButton\" type='submit'>{props.buttonText}</button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttonText: PropTypes.string\n};\n\nexport default ReusableForm;","import React from 'react';\nimport { v4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport ReusableForm from './ReusableForm';\n\nfunction NewItemForm(props){\n\n  function handleNewItemFormSubmission(event) {\n    event.preventDefault();\n    props.onNewItemCreation({\n      name: event.target.name.value, \n      description: event.target.description.value, \n      quantity: event.target.quantity.value,\n      id: v4()\n    });\n  }\n\n  return (\n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleNewItemFormSubmission}\n        buttonText=\"add item\" />\n    </React.Fragment>\n  );\n}\n\nNewItemForm.propTypes = {\n  onNewItemCreation: PropTypes.func\n}\n\nexport default NewItemForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Item(props){\n\n  const itemStyles = {\n    height: '200px',\n    width: '150px',\n    border: '1px solid #82CA81',\n    textAlign: 'center',\n    padding: '2%',\n    marginBottom: '1em',\n    marginTop: '1em'\n  }\n\n  function inStock(count) {\n    return count > 0 ? <button className=\"buy-button\" onClick={()=> props.whenBuyClicked(props.id)} type=\"submit\">Buy</button>\n    : <p>sold out!</p>\n  }\n\n  return (\n    <React.Fragment>\n      <div style={itemStyles}>\n        <p>{props.name}</p>\n        <p>{props.description}</p>\n        <p>Quantity: {props.quantity}</p>\n        {inStock(props.quantity)}\n        <div className=\"buttons\">\n          <button onClick={()=> props.whenRestockClicked(props.id)} type=\"submit\">Restock</button> \n          <button onClick = {() => props.whenItemClicked(props.id)}>Details</button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  quantity: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  whenItemClicked: PropTypes.func,\n  whenBuyClicked: PropTypes.func,\n  whenRestockClicked: PropTypes.func\n}\n\nexport default Item;","import React from 'react';\nimport Item from './Item';\nimport PropTypes from 'prop-types';\n\nfunction ItemList(props){\n  return (\n    <React.Fragment>\n      {Object.values(props.itemList).map((item) => {\n        return <Item \n          whenItemClicked = {props.onItemSelection}\n          whenBuyClicked = {props.onClickingBuy}\n          whenRestockClicked={props.onClickingRestock}\n          name={item.name}\n          description={item.description}\n          quantity={item.quantity}\n          id={item.id}\n          key={item.id}/>\n      })}\n    </React.Fragment>\n  );\n}\n\nItemList.propTypes = {\n  itemList: PropTypes.object,\n  onItemSelection: PropTypes.func,\n  onClickingRestock: PropTypes.func\n};\n\nexport default ItemList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ItemDetail(props){\n  const { item, onClickingDelete, onClickingEdit } = props;\n\n  return (\n    <React.Fragment>\n      <h1>{item.name}</h1>\n      <p>{item.description}</p>\n      <p>{item.quantity}</p>\n      <button onClick={ ()=> onClickingDelete(item.id)}>Remove Item</button>\n      <button onClick={ ()=> onClickingEdit(item.id) }>Update Item Details</button>\n    </React.Fragment>\n  );\n}\n\nItemDetail.propTypes = {\n  item: PropTypes.object,\n  onClickingDelete: PropTypes.func,\n  onClickingEdit: PropTypes.func\n};\n\nexport default ItemDetail;","import React from 'react';\nimport ReusableForm from './ReusableForm';\nimport PropTypes from 'prop-types';\n\nfunction EditItemForm(props){\n  const { item } = props;\n\n  function handleEditItemFormSubmission(event){\n    event.preventDefault();\n    console.log(\"reached handle edit item form submission function\");\n    props.onEditItem({\n      name: event.target.name.value,\n      description: event.target.description.value,\n      quantity: event.target.quantity.value,\n      id: item.id\n    });\n  }\n  \n  return( \n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleEditItemFormSubmission}\n        buttonText=\"Update Item Details\" />\n    </React.Fragment>\n  );\n}\n\nEditItemForm.propTypes = {\n  onEditItem: PropTypes.func\n}\n\nexport default EditItemForm;","import React from 'react';\nimport NewItemForm from './NewItemForm.js';\nimport ItemList from './ItemList.js';\nimport ItemDetail from './ItemDetail';\nimport EditItemForm from './EditItemForm';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction ItemControl(props) {\n\n  const handleClick = () => {\n    if (props.selectedItem !== null) {   \n      const { dispatch } = props;\n      const action = {\n        type: 'CHANGE_TO_NULL'\n      }   \n      dispatch(action);\n    } else {\n      const { dispatch } = props;\n      const action = {\n        type: 'TOGGLE_FORM'\n      }\n      dispatch(action);\n    }\n  }\n\n  const handleEditClick = () => {\n    console.log(\"handleEditClick reached!\");\n    const { dispatch } = props;\n    const action = {\n      type: 'TOGGLE_EDIT'\n    }\n    dispatch(action);\n  }\n\n  const handleEditingItemInList = (itemToEdit) => {\n    const { dispatch } = props;\n    const { name, description, quantity, id } = itemToEdit;\n    const action = {\n      type: 'ADD_ITEM',\n      id: id,\n      name: name,\n      description: description,\n      quantity: quantity\n    }\n    dispatch(action);\n    const actionTwo = {\n      type: 'TOGGLE_EDIT'\n    }\n    dispatch(actionTwo);\n    const actionThree = {\n      type: 'CHANGE_TO_NULL'\n    }\n    dispatch(actionThree);\n  }\n\n  const handleItemPurchase = (id) => {\n    const { dispatch } = props;\n    const currentlySelectedItem = Object.values(props.masterItemList).filter(item => item.id === id)[0];\n    const action = {\n      type: 'ADD_ITEM',\n      id: id,\n      quantity: currentlySelectedItem.quantity - 1,\n      name: currentlySelectedItem.name,\n      description: currentlySelectedItem.description\n    }\n    dispatch(action);\n  }\n\n  const handleItemRestock = (id) => {\n    const { dispatch } = props;\n    const currentlySelectedItem = Object.values(props.masterItemList).filter(item => item.id === id)[0];\n    const action = {\n      type: 'ADD_ITEM',\n      id: id,\n      name: currentlySelectedItem.name,\n      description: currentlySelectedItem.description,\n      quantity: parseInt(currentlySelectedItem.quantity) + 10\n    }\n    dispatch(action);\n  }\n\n  const handleDeletingItem = (id) => {\n    const { dispatch } = props;\n    const action = {\n      type: 'DELETE_ITEM',\n      id: id\n    }\n    dispatch(action);\n    const actionTwo = {\n      type: 'CHANGE_TO_NULL'\n    }\n    dispatch(actionTwo);\n  }\n\n  const handleChangingSelectedItem = (id) => {\n    const selectedItem = props.masterItemList[id];\n    const { dispatch } = props;\n    const action = {\n      type: 'CHANGE_SELECTED',\n      name: selectedItem.name,\n      id: selectedItem.id,\n      description: selectedItem.description,\n      quantity: selectedItem.quantity\n    }\n    dispatch(action);\n  }\n\n  const handleAddingNewItemToList = (newItem) => {\n    const { dispatch } = props;\n    const { id, name, description, quantity } = newItem;\n    const action = {\n      type: 'ADD_ITEM',\n      id: id,\n      name: name,\n      description: description,\n      quantity: quantity\n    }\n    dispatch(action);\n    const actionTwo = {\n      type: 'TOGGLE_FORM'\n    }\n    dispatch(actionTwo);\n  }\n\n  const itemControlStyles = {\n    position: 'relative',\n    top: '30vh',\n    margin: '2%',\n    overflowY: 'auto'\n  }\n\n  let currentlyVisibleState = null;\n  let buttonText = null;\n  console.log(props.editing);\n  if (props.editing) {\n    console.log(\"in editing render\");\n    currentlyVisibleState = <EditItemForm \n      item = {props.selectedItem}\n      onEditItem = {handleEditingItemInList} />\n    buttonText = \"return to items\";\n  } else if (props.selectedItem != null) {\n    currentlyVisibleState = <ItemDetail \n      item = {props.selectedItem} \n      onClickingDelete = {handleDeletingItem}\n      onClickingEdit = {handleEditClick} />\n    buttonText = \"return to items\";\n  } else if (props.formVisibleOnPage) {\n    currentlyVisibleState = <NewItemForm \n      onNewItemCreation={handleAddingNewItemToList}/>\n    buttonText = \"return to items\";\n  } else {\n    currentlyVisibleState = <ItemList \n      itemList={props.masterItemList} \n      onItemSelection={handleChangingSelectedItem}\n      onClickingBuy={handleItemPurchase}\n      onClickingRestock={handleItemRestock} />\n    buttonText = \"+\";\n  }\n\n  return (\n    <React.Fragment>\n      <div style={itemControlStyles}>\n        <div className=\"adjustableButton\">\n          <button onClick={handleClick}>{buttonText}</button>\n        </div>\n        <div className=\"storeFront\">\n          {currentlyVisibleState}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nItemControl.propTypes = {\n  masterItemList: PropTypes.object\n}\n\nconst mapStateToProps = state => {\n  return {\n    masterItemList: state.masterItemList,\n    formVisibleOnPage: state.formVisibleOnPage,\n    editing: state.editing,\n    selectedItem: state.selectedItem\n  }\n}\n\nItemControl = connect(mapStateToProps)(ItemControl);\n\nexport default ItemControl;","import React from 'react';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport ItemControl from './ItemControl.js';\nimport './../App.css';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header/>\n      <ItemControl/>\n      <Footer/>\n    </React.Fragment>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import formVisibleReducer from './form-visible-reducer';\nimport itemListReducer from './item-list-reducer';\nimport editingVisibleReducer from './editing-visible-reducer';\nimport selectedItemReducer from './selected-item-reducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n  formVisibleOnPage: formVisibleReducer,\n  masterItemList: itemListReducer,\n  editing: editingVisibleReducer,\n  selectedItem: selectedItemReducer\n});\n\nexport default rootReducer;","export default ( state = false, action) => {\n  switch(action.type) {\n    case 'TOGGLE_FORM':\n      return !state;  \n    default:\n      return state;\n  }\n};","export default (state = {}, action) => {\n  const { name, description, quantity, id } = action;\n  switch (action.type) {\n    case 'ADD_ITEM':\n      return Object.assign({}, state, {\n        [id]: {\n          name: name,\n          description: description,\n          quantity: quantity,\n          id: id\n        }\n      });\n    case 'DELETE_ITEM':\n      const newState = { ...state };\n      delete newState[id];\n      return newState;\n    default:\n      return state;\n  }\n};","export default (state=false, action) => {\n  switch(action.type) {\n    case 'TOGGLE_EDIT':\n      return !state;\n    default:\n      return state;\n  }\n}","export default (state = null, action) => {\n  const { name, description, quantity, id } = action;\n  switch (action.type) {\n    case 'CHANGE_SELECTED':\n      const newState = {\n        name: name,\n        description: description,\n        quantity: quantity,\n        id: id\n      };\n      return newState;\n    case 'CHANGE_TO_NULL':\n      const nullState = null;\n      return nullState;\n  default:\n    return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer);\n\nstore.subscribe(() =>\n  console.log(store.getState())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}